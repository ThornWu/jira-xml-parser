export const ENTITY_MAP = {
  Action: 'Action',
  Application: 'Application',
  ApplicationUser: 'ApplicationUser',
  Avatar: 'Avatar',
  ChangeGroup: 'ChangeGroup',
  ChangeItem: 'ChangeItem',
  ClusteredJob: 'ClusteredJob',
  ColumnLayout: 'ColumnLayout',
  ColumnLayoutItem: 'ColumnLayoutItem',
  CommentVersion: 'CommentVersion',
  Component: 'Component',
  ConfigurationContext: 'ConfigurationContext',
  CustomField: 'CustomField',
  CustomFieldOption: 'CustomFieldOption',
  CustomFieldValue: 'CustomFieldValue',
  Directory: 'Directory',
  DirectoryAttribute: 'DirectoryAttribute',
  DirectoryOperation: 'DirectoryOperation',
  DraftWorkflow: 'DraftWorkflow',
  EntityProperty: 'EntityProperty',
  EventType: 'EventType',
  Feature: 'Feature',
  FieldConfigScheme: 'FieldConfigScheme',
  FieldConfigSchemeIssueType: 'FieldConfigSchemeIssueType',
  FieldConfiguration: 'FieldConfiguration',
  FieldLayout: 'FieldLayout',
  FieldLayoutItem: 'FieldLayoutItem',
  FieldLayoutScheme: 'FieldLayoutScheme',
  FieldLayoutSchemeEntity: 'FieldLayoutSchemeEntity',
  FieldScreen: 'FieldScreen',
  FieldScreenLayoutItem: 'FieldScreenLayoutItem',
  FieldScreenScheme: 'FieldScreenScheme',
  FieldScreenSchemeItem: 'FieldScreenSchemeItem',
  FieldScreenTab: 'FieldScreenTab',
  FileAttachment: 'FileAttachment',
  GadgetUserPreference: 'GadgetUserPreference',
  GenericConfiguration: 'GenericConfiguration',
  GlobalPermissionEntry: 'GlobalPermissionEntry',
  Group: 'Group',
  Issue: 'Issue',
  IssueLink: 'IssueLink',
  IssueLinkType: 'IssueLinkType',
  IssueSecurityScheme: 'IssueSecurityScheme',
  IssueType: 'IssueType',
  IssueTypeScreenScheme: 'IssueTypeScreenScheme',
  IssueTypeScreenSchemeEntity: 'IssueTypeScreenSchemeEntity',
  IssueVersion: 'IssueVersion',
  JQRTZLocks: 'JQRTZLocks',
  Label: 'Label',
  LicenseRoleDefault: 'LicenseRoleDefault',
  LicenseRoleGroup: 'LicenseRoleGroup',
  ListenerConfig: 'ListenerConfig',
  ManagedConfigurationItem: 'ManagedConfigurationItem',
  Membership: 'Membership',
  NodeAssociation: 'NodeAssociation',
  Notification: 'Notification',
  NotificationScheme: 'NotificationScheme',
  OAuthConsumer: 'OAuthConsumer',
  OAuthConsumerToken: 'OAuthConsumerToken',
  OAuthServiceProviderConsumer: 'OAuthServiceProviderConsumer',
  OAuthServiceProviderToken: 'OAuthServiceProviderToken',
  OSCurrentStep: 'OSCurrentStep',
  OSCurrentStepPrev: 'OSCurrentStepPrev',
  OSHistoryStep: 'OSHistoryStep',
  OSHistoryStepPrev: 'OSHistoryStepPrev',
  OSPropertyDate: 'OSPropertyDate',
  OSPropertyEntry: 'OSPropertyEntry',
  OSPropertyNumber: 'OSPropertyNumber',
  OSPropertyString: 'OSPropertyString',
  OSPropertyText: 'OSPropertyText',
  OSWorkflowEntry: 'OSWorkflowEntry',
  OptionConfiguration: 'OptionConfiguration',
  PermissionScheme: 'PermissionScheme',
  PluginState: 'PluginState',
  PluginVersion: 'PluginVersion',
  PortalPage: 'PortalPage',
  PortletConfiguration: 'PortletConfiguration',
  Priority: 'Priority',
  ProductLicense: 'ProductLicense',
  Project: 'Project',
  ProjectKey: 'ProjectKey',
  ProjectRole: 'ProjectRole',
  ProjectRoleActor: 'ProjectRoleActor',
  ReindexComponent: 'ReindexComponent',
  ReindexRequest: 'ReindexRequest',
  RememberMeToken: 'RememberMeToken',
  RemoteIssueLink: 'RemoteIssueLink',
  Resolution: 'Resolution',
  RunDetails: 'RunDetails',
  SchemeIssueSecurities: 'SchemeIssueSecurities',
  SchemeIssueSecurityLevels: 'SchemeIssueSecurityLevels',
  SchemePermissions: 'SchemePermissions',
  SearchRequest: 'SearchRequest',
  SequenceValueItem: 'SequenceValueItem',
  ServiceConfig: 'ServiceConfig',
  SharePermissions: 'SharePermissions',
  Status: 'Status',
  UpgradeHistory: 'UpgradeHistory',
  UpgradeTaskHistory: 'UpgradeTaskHistory',
  UpgradeTaskHistoryAuditLog: 'UpgradeTaskHistoryAuditLog',
  UpgradeVersionHistory: 'UpgradeVersionHistory',
  User: 'User',
  UserAssociation: 'UserAssociation',
  UserAttribute: 'UserAttribute',
  UserHistoryItem: 'UserHistoryItem',
  Version: 'Version',
  Workflow: 'Workflow',
  WorkflowScheme: 'WorkflowScheme',
  WorkflowSchemeEntity: 'WorkflowSchemeEntity',
  Worklog: 'Worklog',
  WorklogVersion: 'WorklogVersion'
} as const;

export type EntityType = keyof typeof ENTITY_MAP;
