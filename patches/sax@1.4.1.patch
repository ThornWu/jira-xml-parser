diff --git a/lib/sax.js b/lib/sax.js
index 122ad8e5a478339d56fc86d00d21c5d142739f0e..b3c3827af42cc89ade4b5c8cb380cbe85e70d3b6 100644
--- a/lib/sax.js
+++ b/lib/sax.js
@@ -13,7 +13,7 @@
   // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme
   // edge case, result in creating at most one complete copy of the string passed in.
   // Set to Infinity to have unlimited buffers.
-  sax.MAX_BUFFER_LENGTH = 64 * 1024
+  sax.MAX_BUFFER_LENGTH = Infinity;
 
   var buffers = [
     'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',
@@ -53,7 +53,6 @@
     parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH
     parser.opt = opt || {}
     parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags
-    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'
     parser.tags = []
     parser.closed = parser.closedRoot = parser.sawRoot = false
     parser.tag = parser.error = null
@@ -139,6 +138,7 @@
   }
 
   function clearBuffers (parser) {
+    console.log('sax---clearBuffers');
     for (var i = 0, l = buffers.length; i < l; i++) {
       parser[buffers[i]] = ''
     }
@@ -204,6 +204,9 @@
       // go ahead and clear error, so we can write again.
       me._parser.error = null
     }
+    this._parser.clearBuffers = function () {
+      clearBuffers(me._parser)
+    }
 
     this._decoder = null
 
@@ -643,8 +646,8 @@
   }
 
   function textopts (opt, text) {
-    if (opt.trim) text = text.trim()
-    if (opt.normalize) text = text.replace(/\s+/g, ' ')
+    // if (opt.trim) text = text.trim()
+    // if (opt.normalize) text = text.replace(/\s+/g, ' ')
     return text
   }
 
@@ -686,7 +689,9 @@
   }
 
   function newTag (parser) {
-    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()
+    if (!parser.strict) {
+
+    }
     var parent = parser.tags[parser.tags.length - 1] || parser
     var tag = parser.tag = { name: parser.tagName, attributes: {} }
 
@@ -714,10 +719,6 @@
   }
 
   function attrib (parser) {
-    if (!parser.strict) {
-      parser.attribName = parser.attribName[parser.looseCase]()
-    }
-
     if (parser.attribList.indexOf(parser.attribName) !== -1 ||
       parser.tag.attributes.hasOwnProperty(parser.attribName)) {
       parser.attribName = parser.attribValue = ''
@@ -867,9 +868,6 @@
     // <a><b></c></b></a> will close everything, otherwise.
     var t = parser.tags.length
     var tagName = parser.tagName
-    if (!parser.strict) {
-      tagName = tagName[parser.looseCase]()
-    }
     var closeTo = tagName
     while (t--) {
       var close = parser.tags[t]
@@ -1533,9 +1531,9 @@
       }
     } // while
 
-    if (parser.position >= parser.bufferCheckPosition) {
-      checkBufferLength(parser)
-    }
+    // if (parser.position >= parser.bufferCheckPosition) {
+    //   checkBufferLength(parser)
+    // }
     return parser
   }
 